// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeApp.Data;

#nullable disable

namespace RecipeApp.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250928204601_SeedUnits")]
    partial class SeedUnits
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeApp.Models.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameCanonical")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameDisplay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecipeApp.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int?>("Servings")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipeApp.Models.RecipeIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("RecipeApp.Models.RecipeTag", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("RecipeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTags");
                });

            modelBuilder.Entity("RecipeApp.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RecipeApp.Models.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsMass")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("ToGramsFactor")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ToMillilitersFactor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeedea49-7980-4a45-b18f-43e77a045ed1"),
                            Code = "g",
                            IsMass = true,
                            ToGramsFactor = 1m
                        },
                        new
                        {
                            Id = new Guid("f224d612-13ca-4c82-9e82-76636df36f93"),
                            Code = "kg",
                            IsMass = true,
                            ToGramsFactor = 1000m
                        },
                        new
                        {
                            Id = new Guid("997350f6-687f-4360-8336-d954c55c28df"),
                            Code = "ml",
                            IsMass = false,
                            ToMillilitersFactor = 1m
                        },
                        new
                        {
                            Id = new Guid("d0763c7a-e61f-4348-bbc5-ceadf364bb07"),
                            Code = "l",
                            IsMass = false,
                            ToMillilitersFactor = 1000m
                        },
                        new
                        {
                            Id = new Guid("39e1264b-cad0-4253-9905-fd525a62fe0a"),
                            Code = "tsp",
                            IsMass = false,
                            ToMillilitersFactor = 5m
                        },
                        new
                        {
                            Id = new Guid("a322b769-51c7-4673-aaf3-8ea89a5755a1"),
                            Code = "tbsp",
                            IsMass = false,
                            ToMillilitersFactor = 15m
                        },
                        new
                        {
                            Id = new Guid("1271ff5e-c9b8-4567-83bf-d7d86bddbfec"),
                            Code = "cup",
                            IsMass = false,
                            ToMillilitersFactor = 240m
                        },
                        new
                        {
                            Id = new Guid("3885fcf3-1eab-4bb3-b18d-ae0ca18c8e89"),
                            Code = "item",
                            IsMass = false
                        });
                });

            modelBuilder.Entity("RecipeApp.Models.RecipeIngredient", b =>
                {
                    b.HasOne("RecipeApp.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RecipeApp.Models.RecipeTag", b =>
                {
                    b.HasOne("RecipeApp.Models.Recipe", "Recipe")
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeApp.Models.Tag", "Tag")
                        .WithMany("RecipeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("RecipeApp.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("RecipeTags");
                });

            modelBuilder.Entity("RecipeApp.Models.Tag", b =>
                {
                    b.Navigation("RecipeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
